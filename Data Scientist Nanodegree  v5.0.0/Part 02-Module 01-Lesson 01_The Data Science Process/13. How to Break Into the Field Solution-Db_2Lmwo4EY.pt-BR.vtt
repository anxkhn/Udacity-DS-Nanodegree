WEBVTT
Kind: captions
Language: pt-BR

00:00:00.278 --> 00:00:05.620
Vamos ao segundo vídeo
de como começar na área.

00:00:05.653 --> 00:00:08.322
Se essa fosse
nossa questão de interesse,

00:00:08.355 --> 00:00:10.431
quais passos poderíamos dar

00:00:10.464 --> 00:00:12.807
para analisar os dados
e tentar respondê-la?

00:00:12.840 --> 00:00:14.503
O primeiro passo é:

00:00:14.536 --> 00:00:16.849
para entendermos sobre
como começar na área,

00:00:16.882 --> 00:00:18.973
observaremos o campo
CousinEducation

00:00:19.006 --> 00:00:22.111
usando o conjunto de dados schema
para responder à pergunta,

00:00:22.144 --> 00:00:24.221
e escrevendo a função
get_description,

00:00:24.254 --> 00:00:27.546
que pega schema e column
como uma string

00:00:27.579 --> 00:00:30.307
e retorna a descrição
da coluna.

00:00:30.340 --> 00:00:35.073
Basicamente, o schema é o conjunto
de dados que lemos aqui em cima.

00:00:35.106 --> 00:00:38.504
Nesse caso,
lemos os conjuntos de dados,

00:00:38.537 --> 00:00:40.175
um monte de bibliotecas

00:00:40.208 --> 00:00:43.423
e este arquivo py de teste,
que executa o código

00:00:43.456 --> 00:00:45.407
e garante o funcionamento.

00:00:45.440 --> 00:00:50.040
Também trabalharemos
com o conjunto de dados schema.

00:00:50.073 --> 00:00:52.343
Poderia ser útil

00:00:52.376 --> 00:00:57.040
colocarmos uma célula aqui.

00:00:57.073 --> 00:01:01.399
Vamos dar uma olhada rápida
no conjunto de dados schema.

00:01:01.432 --> 00:01:04.266
Vemos que há uma coluna
e uma questão.

00:01:04.986 --> 00:01:10.879
Basicamente pegaremos
a coluna como string

00:01:10.912 --> 00:01:14.873
e retornaremos a descrição.

00:01:14.906 --> 00:01:16.497
Aqui está a descrição -

00:01:16.530 --> 00:01:18.280
no campo da questão -

00:01:18.313 --> 00:01:20.832
e o nome da coluna está aqui.

00:01:20.865 --> 00:01:25.041
Isso significa
que pegaremos schema -

00:01:25.074 --> 00:01:27.511
que está sendo passado
como um argumento aqui,

00:01:27.544 --> 00:01:29.024
é um dos inputs -,

00:01:29.057 --> 00:01:33.771
e queremos que a coluna
seja igual

00:01:33.804 --> 00:01:37.442
a column_name.

00:01:37.475 --> 00:01:39.794
Quando isso for verdadeiro...

00:01:39.827 --> 00:01:45.700
Basicamente queremos pegar
a parte do schema

00:01:45.733 --> 00:01:49.680
onde isso é verdadeiro e...

00:01:50.604 --> 00:01:53.825
devolver a parte da questão.

00:01:54.472 --> 00:01:57.318
Se estiver se perguntando
o que isso está fazendo aqui,

00:01:57.351 --> 00:02:00.046
ele está dizendo:
"Quero que você entre no schema,

00:02:00.079 --> 00:02:05.791
que pegue a coluna
com o column_name passado

00:02:05.824 --> 00:02:08.560
e me devolva a descrição."

00:02:08.593 --> 00:02:10.534
Espero que funcione.

00:02:10.567 --> 00:02:14.241
Se funcionar, então devemos...

00:02:14.274 --> 00:02:15.849
Não funcionou.

00:02:16.729 --> 00:02:19.656
"Shema", há um "shema"
em algum lugar.

00:02:19.689 --> 00:02:21.808
Schema. Legal.

00:02:21.841 --> 00:02:23.296
Aqui diz...

00:02:23.329 --> 00:02:26.016
Vemos "Respondent: ID number".

00:02:26.049 --> 00:02:28.191
Podemos verificar a solução.

00:02:28.224 --> 00:02:30.880
Ah, não! Não funcionou!

00:02:31.872 --> 00:02:37.693
Objetos da série são mutáveis,
portanto, não podem conter Hash.

00:02:37.726 --> 00:02:40.235
Podemos voltar aqui...

00:02:42.186 --> 00:02:47.010
Se olharmos como começar
em uma área e a solução,

00:02:47.762 --> 00:02:49.619
e observarmos isto...

00:02:51.538 --> 00:02:55.683
Eles viraram uma lista
e depois foram obtidos.

00:02:56.307 --> 00:02:59.681
De volta aqui.
Vamos tentar novamente.

00:02:59.714 --> 00:03:03.288
Eles sugerem fazer isso
como uma lista

00:03:03.903 --> 00:03:05.944
para pegar depois.

00:03:06.767 --> 00:03:08.807
Então, é só essa parte.

00:03:08.840 --> 00:03:10.641
Isso é estranho. Por quê?

00:03:11.384 --> 00:03:15.492
Schema. Schema...

00:03:17.472 --> 00:03:20.168
Schema...

00:03:21.543 --> 00:03:23.703
Column...

00:03:24.679 --> 00:03:27.478
=='Country'...

00:03:27.511 --> 00:03:30.575
Agora está pegando.

00:03:30.608 --> 00:03:34.039
Vamos pegar a questão
a partir disso.

00:03:35.176 --> 00:03:37.473
E isso me devolve
aquela coisa estranha.

00:03:37.506 --> 00:03:39.495
E se eu pedir uma lista,

00:03:40.096 --> 00:03:42.647
só obterei esta string -

00:03:42.680 --> 00:03:45.578
o dataframe da Pandas -,
e se eu passar para uma lista,

00:03:45.611 --> 00:03:49.727
só obterei isso.
O zero pega a string de lá.

00:03:50.527 --> 00:03:54.912
Complicado.
Esse foi meio complicado.

00:03:56.512 --> 00:03:59.454
A questão
na qual nos concentramos

00:03:59.487 --> 00:04:01.646
era como começar em uma área,

00:04:01.679 --> 00:04:04.519
que era esta coluna aqui.

00:04:04.552 --> 00:04:07.640
Aqui está uma descrição
desta coluna.

00:04:08.272 --> 00:04:11.214
Poderíamos ler isso
para entender melhor

00:04:11.247 --> 00:04:14.713
por que isso seria
uma coisa útil

00:04:14.746 --> 00:04:17.473
para nos ajudar
a começar em uma área.

00:04:17.506 --> 00:04:19.063
Aqui diz:

00:04:19.096 --> 00:04:23.545
"Forneça a contagem Pandas
para cada CousinEducation

00:04:23.578 --> 00:04:26.009
e certifique-se
de que esteja certo."

00:04:26.042 --> 00:04:30.146
Isso será
df('CousinEducation')

00:04:30.938 --> 00:04:36.268
e .value_counts.

00:04:38.428 --> 00:04:40.084
Parece bom.

00:04:41.108 --> 00:04:44.076
Isso está meio ruim, não é?

00:04:44.109 --> 00:04:45.451
Todas essas coisas...

00:04:45.484 --> 00:04:47.803
Se alguém sugerisse
mais de uma coisa,

00:04:47.836 --> 00:04:49.746
tudo apareceria junto.

00:04:49.779 --> 00:04:52.019
Esta pessoa sugeriu
três coisas diferentes,

00:04:52.052 --> 00:04:55.759
essa pessoa sugeriu quatro coisas,
e tudo...

00:04:55.792 --> 00:04:59.946
Não apenas uma pessoa,
mas 132 pessoas sugeriram isto,

00:04:59.979 --> 00:05:02.089
e 140 sugeriram isto.

00:05:02.122 --> 00:05:07.871
Se tentarmos criar um gráfico
do que aparece aqui,

00:05:07.904 --> 00:05:12.190
isso não ficaria muito bom,

00:05:12.223 --> 00:05:16.663
provavelmente demoraria muito,
porque há muita coisa ruim aqui.

00:05:16.696 --> 00:05:18.263
Em vez disso,

00:05:18.296 --> 00:05:23.447
basicamente dividiremos isso
para que haja uma barra distinta

00:05:23.480 --> 00:05:26.643
para cada um
dos métodos educacionais.

00:05:26.676 --> 00:05:29.437
Isso será inútil para nós.

00:05:29.470 --> 00:05:31.165
Não podemos fazer nada
com isso.

00:05:31.198 --> 00:05:35.298
Gostaríamos que...
Esses são os valores possíveis,

00:05:35.331 --> 00:05:37.331
e queremos uma barra
para cada um,

00:05:37.364 --> 00:05:40.897
e queremos saber a frequência
com que as pessoas sugerem isso.

00:05:40.930 --> 00:05:45.285
Havia esse método de limpeza,

00:05:45.318 --> 00:05:48.581
que pega cada um desses...

00:05:49.207 --> 00:05:50.877
Se olharmos isso,

00:05:50.910 --> 00:05:54.385
estamos basicamente
pegando cada um

00:05:54.418 --> 00:05:56.944
e mostrando quantas vezes
eles aparecem.

00:05:56.977 --> 00:05:58.444
Isso parece muito melhor,

00:05:58.477 --> 00:06:01.144
e essa função
é uma boa ajuda para isso.

00:06:01.177 --> 00:06:05.817
"Me pergunto se os indivíduos
são influenciados pelas formações.

00:06:05.850 --> 00:06:08.761
Preencha a função abaixo
que será aplicada aos elementos

00:06:08.794 --> 00:06:10.984
da coluna FormalEducation
no df."

00:06:11.017 --> 00:06:14.112
Aqui diz que a string
formal_ed -

00:06:14.145 --> 00:06:17.681
que é uma string de um
dos valores da formação -

00:06:17.714 --> 00:06:23.344
retornará 1 se a string estiver
aqui, e 0, caso contrário.

00:06:23.377 --> 00:06:29.363
Então if formal_ed_str

00:06:29.396 --> 00:06:34.370
estiver in(" ") -

00:06:34.403 --> 00:06:36.579
basicamente aqui.

00:06:36.612 --> 00:06:39.965
Vou pegar esta parte...

00:06:39.998 --> 00:06:42.685
Então return 1

00:06:42.718 --> 00:06:46.894
else: return 0.

00:06:47.541 --> 00:06:50.997
E return 1, else: return 0.

00:06:51.030 --> 00:06:55.717
Basicamente, isso será aplicado
à formação.

00:06:55.750 --> 00:07:00.024
Vemos que um deles
tinha formação profissional,

00:07:00.057 --> 00:07:02.152
doutorado ou mestrado.

00:07:02.185 --> 00:07:06.822
Dá para ter uma ideia do que isso
tentará fazer, mas, basicamente,

00:07:06.855 --> 00:07:10.497
estamos dizendo que se alguém
tiver uma dessas formações,

00:07:10.530 --> 00:07:13.868
então queremos ver
se eles podem

00:07:13.901 --> 00:07:17.115
influenciar as pessoas
a obter esse tipo de formação.

00:07:17.148 --> 00:07:21.219
Se alguém entrou na área
sem nenhuma dessas formações,

00:07:21.252 --> 00:07:23.243
eles se sentem diferentes?

00:07:23.276 --> 00:07:25.410
A sua formação influencia

00:07:25.443 --> 00:07:28.555
outras pessoas
a trilharem o mesmo caminho?

00:07:28.588 --> 00:07:31.411
Basicamente,
este HigherEd é a função.

00:07:31.444 --> 00:07:34.456
Usamos isso e pegamos...

00:07:35.220 --> 00:07:36.810
Se a função estiver correta,

00:07:36.843 --> 00:07:40.537
isso verificará novamente
usando o arquivo de teste.

00:07:40.570 --> 00:07:46.239
Diz para criarmos um subconjunto
dos dados com HigherEd igual a 1.

00:07:46.272 --> 00:07:47.937
Então, df...

00:07:48.608 --> 00:07:50.752
Quero um subconjunto

00:07:51.425 --> 00:07:54.782
com df e HigherEd.

00:07:54.815 --> 00:07:56.463
É esse o nome?

00:07:56.496 --> 00:08:00.600
É. Neste código, criamos
essa nova coluna chamada "HigherEd",

00:08:00.633 --> 00:08:03.168
e aqui a média foi calculada.

00:08:03.201 --> 00:08:06.383
Eles não mostram isso,
apenas mostram a combinação.

00:08:06.416 --> 00:08:09.279
E, se quiséssemos,
poderíamos imprimir isso

00:08:09.312 --> 00:08:12.175
para entendermos
melhor as coisas.

00:08:12.208 --> 00:08:16.864
Parece que cerca de 23%
dos indivíduos do conjunto de dados

00:08:16.897 --> 00:08:20.392
tinham essa formação
mais avançada.

00:08:21.335 --> 00:08:23.999
Aqui subdividimos
o conjunto de dados.

00:08:24.032 --> 00:08:27.504
Então, para aqueles
que são 1...

00:08:28.496 --> 00:08:31.245
Então ed_0

00:08:31.278 --> 00:08:35.372
serão
os que apresentaram zero...

00:08:35.405 --> 00:08:41.304
Vamos imprimir para garantir
que está conforme o esperado.

00:08:41.757 --> 00:08:44.748
Os de cima
devem ser os que tiveram 1 -

00:08:44.781 --> 00:08:46.469
basicamente imprimimos
os ed_1.

00:08:46.502 --> 00:08:47.949
Se aqui só houver 1,

00:08:47.982 --> 00:08:52.028
então é isso que esperávamos, pois
pedimos que fossem apenas esses.

00:08:52.061 --> 00:08:53.536
Os segundos serão os 0.

00:08:53.569 --> 00:08:56.917
Se houvesse 1
ou 0 misturados nisso,

00:08:56.950 --> 00:08:59.590
isso seria diferente
do que estávamos esperando.

00:08:59.623 --> 00:09:00.940
E então...

00:09:00.973 --> 00:09:04.252
Isso é muito código...
Chegamos ao gráfico.

00:09:04.285 --> 00:09:06.389
Aqui pede para conferirmos
este link,

00:09:06.422 --> 00:09:09.525
que foi usado
para criar este gráfico.

00:09:10.294 --> 00:09:12.075
Isso ficou bem legal.

00:09:12.108 --> 00:09:14.244
Conseguimos obter
insights úteis.

00:09:14.277 --> 00:09:18.293
As barras vermelhas
sugerem que existem...

00:09:18.326 --> 00:09:22.005
O tamanho da barra sugere
a inclinação

00:09:22.038 --> 00:09:24.612
entre esses dois grupos.

00:09:24.645 --> 00:09:28.971
A porcentagem de pessoas
que estavam na categoria 1

00:09:29.004 --> 00:09:33.173
e que sugeriram fazer
cursos on-line foi de 20,5%.

00:09:33.206 --> 00:09:36.358
E a porcentagem daqueles

00:09:36.391 --> 00:09:39.391
que não apresentaram
formação superior,

00:09:39.424 --> 00:09:42.433
e que sugeriram fazer cursos
on-line foi de 21%,

00:09:42.466 --> 00:09:47.407
sugerindo que havia mais gente
sem formação superior,

00:09:47.440 --> 00:09:51.780
mas vemos que esta barra verde
é a maior de todas.

00:09:51.813 --> 00:09:54.675
É substancialmente maior
do que as outras barras,

00:09:54.708 --> 00:09:57.110
que são de 0,007,

00:09:57.143 --> 00:10:01.878
de 0,00005...

00:10:01.911 --> 00:10:03.557
Estas são bem pequenas,

00:10:03.590 --> 00:10:07.588
e esta tem 2,5% de diferença.

00:10:07.621 --> 00:10:10.668
O resto não chega nem a 1%,

00:10:11.363 --> 00:10:14.482
mas este chega a 2,5%.

00:10:14.515 --> 00:10:17.755
Vemos que isto está associado
a um mestrado.

00:10:17.788 --> 00:10:20.708
Essencialmente, as pessoas
com formação mais elevada

00:10:20.741 --> 00:10:24.499
sugeriram que o próximo passo
seria a obtenção do mestrado,

00:10:24.532 --> 00:10:27.321
enquanto, dentre aqueles
que não tinham,

00:10:27.354 --> 00:10:29.878
apenas 3% sugeriam isso.

00:10:29.911 --> 00:10:32.358
Uma diferença de 2,5%,

00:10:32.391 --> 00:10:35.407
que é a diferença
mais substancial aqui.

00:10:35.440 --> 00:10:38.505
Aqui diz: "O que podemos
concluir com o gráfico acima?"

00:10:38.538 --> 00:10:41.470
E essencialmente
aqui deveríamos -

00:10:41.503 --> 00:10:43.361
se executarmos isso...

00:10:43.394 --> 00:10:46.200
Aqui diz que está errado.
Existem alguns falsos aqui.

00:10:46.233 --> 00:10:48.435
Devemos alterar
para verdadeiro ou falso.

00:10:48.468 --> 00:10:51.462
"Todos devem ter
um nível superior de formação."

00:10:51.495 --> 00:10:54.939
Creio que o resultado diz

00:10:54.972 --> 00:10:57.415
que devemos escolher
o caminho mais adequado.

00:10:57.448 --> 00:10:59.031
"Independentemente da formação,

00:10:59.064 --> 00:11:02.525
os cursos on-line são a melhor forma
de formação sugerida",

00:11:02.558 --> 00:11:03.704
e isso é verdade.

00:11:03.737 --> 00:11:07.247
Eu disse algo que sugeriu
que isso era falso

00:11:07.280 --> 00:11:08.975
e depois mudei
para verdadeiro.

00:11:09.008 --> 00:11:11.127
Independentemente da formação,

00:11:11.160 --> 00:11:13.430
cursos na internet
são os mais sugeridos.

00:11:13.463 --> 00:11:16.864
"Fazer cursos on-line"
foi o mais sugerido

00:11:16.897 --> 00:11:19.760
em comparação
com qualquer outro.

00:11:19.793 --> 00:11:22.441
"Há uma diferença de menos de 1%
entre as sugestões

00:11:22.474 --> 00:11:25.687
dos dois principais grupos
para todas as formas de formação."

00:11:25.720 --> 00:11:28.642
E isso não é verdadeiro,
porque há uma diferença de 2,5%

00:11:28.675 --> 00:11:32.840
para aqueles
com mais formação.

00:11:32.873 --> 00:11:34.656
"Aqueles com mais formação

00:11:34.689 --> 00:11:37.672
sugeriram mais
do que aqueles sem formação."

00:11:37.705 --> 00:11:40.010
E isso é verdadeiro.

00:11:41.970 --> 00:11:43.784
Legal. Isso parece ótimo.

00:11:43.817 --> 00:11:47.667
E isso conclui este notebook.

