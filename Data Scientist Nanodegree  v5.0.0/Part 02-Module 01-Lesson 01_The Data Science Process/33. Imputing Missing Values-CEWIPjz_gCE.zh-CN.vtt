WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:06.780
向数据集中填充值

00:00:06.780 --> 00:00:11.129
可能是很多数据科学家处理缺失值的最常用方法

00:00:11.130 --> 00:00:14.485
但是 了解这种方法的缺点也非常重要

00:00:14.484 --> 00:00:18.850
首先 来看一些常见的填充缺失值的方法

00:00:18.850 --> 00:00:21.850
包括使用某一列的均值、

00:00:21.850 --> 00:00:25.670
中位数或者众数填充该列的缺失值

00:00:25.670 --> 00:00:30.860
还可以用其他列的数据来预测某一列的缺失值

00:00:30.859 --> 00:00:35.310
可以使用任何一种你熟悉的监督学习方法

00:00:35.310 --> 00:00:38.385
比如 线性回归或者树模型

00:00:38.384 --> 00:00:42.859
还可以利用行之间相似的特性

00:00:42.859 --> 00:00:47.304
使用其他相似行中的对应值来填充

00:00:47.304 --> 00:00:49.030
这种情况下 需要注意

00:00:49.030 --> 00:00:53.829
所有的列都应该有匹配的特征值 只有此处存在缺失值

00:00:53.829 --> 00:00:57.799
所以我们可能需要单独地对某些值进行填充

00:00:57.799 --> 00:01:02.140
比较像用 k 近邻算法来填充缺失值

00:01:02.140 --> 00:01:05.575
需要注意的是

00:01:05.575 --> 00:01:07.510
用任何的方法来填充缺失值

00:01:07.510 --> 00:01:10.335
都会淡化该特征的重要性

00:01:10.334 --> 00:01:13.099
特征的可变性可以帮助你

00:01:13.099 --> 00:01:16.094
提升模型最后的预测结果

00:01:16.094 --> 00:01:20.989
通过填充 虽然减少了数据里的缺失值

00:01:20.989 --> 00:01:26.210
但同时也因为降低了特征的可变性

00:01:26.209 --> 00:01:29.199
削弱了该特征对预测结果的帮助

00:01:29.200 --> 00:01:33.320
举个例子 你想要利用年龄、

00:01:33.319 --> 00:01:35.424
母亲的身高、父亲的身高

00:01:35.424 --> 00:01:37.004
来预测孩子的身高

00:01:37.004 --> 00:01:40.769
如果你没有母亲或者父亲的身高 或者年龄

00:01:40.769 --> 00:01:42.849
可以简单使用每一列的均值、

00:01:42.849 --> 00:01:45.439
中位数或者众数来填充

00:01:45.439 --> 00:01:50.090
我们可以算出每一列的均值 然后用均值来填充缺失的数据

00:01:50.090 --> 00:01:53.600
但这样的话

00:01:53.599 --> 00:01:57.765
行之间变得更相似 我们也不知道这到底是不是对的

00:01:57.765 --> 00:02:02.390
基于我们了解的事实和数据

00:02:02.390 --> 00:02:05.620
填充缺失值 削弱了我们模型的预测能力

00:02:05.620 --> 00:02:09.139
不论是删除缺失值还是填充缺失值

00:02:09.139 --> 00:02:13.930
都要非常小心 注意处理结果对模型造成的影响

