WEBVTT
Kind: captions
Language: zh-CN

00:00:03.470 --> 00:00:08.875
可以看到 我们的模型在训练集上有非常好的表现

00:00:08.875 --> 00:00:12.544
但在测试集上就差了很多

00:00:12.544 --> 00:00:15.644
这就是一个简单的过拟合示例

00:00:15.644 --> 00:00:17.879
过拟合就是指一个模型

00:00:17.879 --> 00:00:20.125
在训练过的数据中表现良好

00:00:20.125 --> 00:00:24.734
但在新的数据上表现不好的现象

00:00:24.734 --> 00:00:26.850
假设我们现在要预测一个人的身高

00:00:26.850 --> 00:00:30.320
收集了五个人的数据

00:00:30.320 --> 00:00:32.539
数据集中包括他们的名字、性别

00:00:32.539 --> 00:00:34.585
父亲的身高 母亲的身高

00:00:34.585 --> 00:00:38.130
我想要用这个数据集来构建一个预测身高的模型

00:00:38.130 --> 00:00:42.260
甚至可以直接用名字来预测 因为我可以完美预测

00:00:42.259 --> 00:00:46.719
Emily 的身高是 5'4 英尺 Jim 的身高是 5'10

00:00:46.719 --> 00:00:50.689
但是这种策略会有问题 当我看到下一个 Emily 时

00:00:50.689 --> 00:00:54.844
我仍然会根据名字将其身高预测为 5'4

00:00:54.844 --> 00:00:57.394
下一个 Jim 也会预测为 5'10

00:00:57.395 --> 00:01:01.490
这就会导致一些特别差的预测结果

00:01:01.490 --> 00:01:05.754
因为一个人的名字通常和身高是不相关的

00:01:05.754 --> 00:01:09.789
现在的预测结果 只是针对我们训练模型所使用的数据

00:01:09.790 --> 00:01:15.050
更好的建模方案 方便扩展到新个体

00:01:15.049 --> 00:01:21.064
应该使用这些其他特征 找到可以扩展到新数据的模式

00:01:21.064 --> 00:01:24.590
通过将数据分成训练集和测试集

00:01:24.590 --> 00:01:28.700
我们可以确保 在训练集中发现的身高相关特征

00:01:28.700 --> 00:01:31.640
也有助于预测样本以外的数据

00:01:31.640 --> 00:01:35.135
也有助于预测样本以外的数据

00:01:35.135 --> 00:01:40.130
值得注意的是 在当前示例中 名字并不是一个好特征

00:01:40.129 --> 00:01:42.319
如果训练集中的名字 没办法匹配到

00:01:42.319 --> 00:01:45.244
任何一条测试集数据怎么办?

00:01:45.245 --> 00:01:48.844
仅靠这些人的名字训练模型

00:01:48.844 --> 00:01:52.760
我们无法做出任何预测

00:01:52.760 --> 00:01:56.420
但这种问题其实非常常见

00:01:56.420 --> 00:01:59.540
与一种叫做冷启动的问题有关

00:01:59.540 --> 00:02:02.280
我们后面会更深入地来讲解

