WEBVTT
Kind: captions
Language: pt-BR

00:00:00.065 --> 00:00:02.406
Neste notebook,
vimos algumas formas diferentes

00:00:02.440 --> 00:00:04.729
de remover dados
usando Pandas.

00:00:04.763 --> 00:00:07.021
Há duas bibliotecas principais
em Python

00:00:07.055 --> 00:00:09.662
que você pode usar
para remover dados ausentes.

00:00:09.696 --> 00:00:12.556
Uma é scikit-learn,
e a outra é Pandas.

00:00:12.590 --> 00:00:15.961
Neste notebook,
estamos trabalhando com Pandas.

00:00:15.995 --> 00:00:20.909
Com isso, aqui lemos
várias bibliotecas de novo,

00:00:20.943 --> 00:00:23.765
inclusive nossos testes,
para ver

00:00:23.799 --> 00:00:27.150
se nossas respostas
correspondem às soluções.

00:00:27.184 --> 00:00:30.308
E aqui, criamos este
conjunto de dados dummy,

00:00:30.342 --> 00:00:33.506
que basicamente numera
de 1 a 18,

00:00:33.540 --> 00:00:35.798
com alguns dados
ausentes aqui.

00:00:35.832 --> 00:00:38.550
Isso servirá
para fins ilustrativos,

00:00:38.584 --> 00:00:43.480
para mostrar como remover coisas
diferentes do conjunto de dados.

00:00:43.514 --> 00:00:46.195
Então, temos algo chamado
"conjunto de dados pequeno"

00:00:46.229 --> 00:00:48.589
e, neste caso, queremos
eliminar qualquer linha.

00:00:48.623 --> 00:00:51.889
Então, há um dropna.

00:00:51.923 --> 00:00:56.881
E há duas coisas principais
para monitorar,

00:00:56.915 --> 00:00:59.440
uma é how, e a outra é axis.

00:00:59.474 --> 00:01:03.231
Axis controla se você quer
eliminar por linhas ou colunas,

00:01:03.265 --> 00:01:06.266
e muitas vezes eu esqueço,
então tento algo

00:01:06.300 --> 00:01:08.468
e vejo se fica
do jeito que eu quero.

00:01:08.502 --> 00:01:12.040
Fazer isso nos conjuntos de dados
pequenos pode ser útil,

00:01:12.074 --> 00:01:14.106
pois você pode ver
o que está acontecendo

00:01:14.140 --> 00:01:18.143
antes de passar
para o conjunto de dados completo.

00:01:18.177 --> 00:01:20.159
Neste caso, queremos
eliminar qualquer linha

00:01:20.192 --> 00:01:21.399
com algum dado ausente.

00:01:21.432 --> 00:01:24.969
Então, imagine que você
queira eliminar a primeira linha,

00:01:25.002 --> 00:01:26.825
depois esta e esta.

00:01:26.859 --> 00:01:30.248
Então, vão sobrar 1, 4 e 5.

00:01:30.282 --> 00:01:34.002
Vou dizer que axis=0.

00:01:34.036 --> 00:01:36.476
Então, 1, 4 e 5 devem ter ficado,
e ficaram.

00:01:36.510 --> 00:01:38.496
Podemos executar o teste,

00:01:38.530 --> 00:01:40.286
e parece que fizemos certo.

00:01:40.320 --> 00:01:42.726
O seguinte diz para eliminar
somente as linhas

00:01:42.760 --> 00:01:44.328
com todos os dados ausentes.

00:01:44.362 --> 00:01:46.605
No nosso caso, significa

00:01:46.639 --> 00:01:50.296
que só devemos eliminar
esta linha aqui.

00:01:50.330 --> 00:01:52.809
Só se ela tiver
todos os dados ausentes.

00:01:52.843 --> 00:01:55.908
Se usarmos o how,

00:01:55.942 --> 00:02:00.605
small_dataset.dropna,

00:02:01.178 --> 00:02:04.391
e se especificarmos
que how='all'

00:02:04.425 --> 00:02:08.126
e axis=0,

00:02:08.160 --> 00:02:09.480
o que fizemos antes.

00:02:09.514 --> 00:02:11.784
Então, axis=0 são as linhas,

00:02:11.818 --> 00:02:14.480
axis=1 são as colunas,
acredito.

00:02:14.514 --> 00:02:17.890
Então, 0, 1, 3, 4, 5.
Parece certo.

00:02:17.924 --> 00:02:22.081
Depois, eliminar somente as linhas
com dados ausentes na coluna 3.

00:02:22.115 --> 00:02:24.397
Isso pode ser útil.

00:02:24.431 --> 00:02:29.567
Small_dataset.dropna.

00:02:29.600 --> 00:02:33.119
Também temos o subconjunto,
que pode ser muito útil.

00:02:33.153 --> 00:02:37.664
Então, subset. E basicamente
você fornece uma lista

00:02:37.698 --> 00:02:39.653
das colunas
que quer monitorar.

00:02:39.687 --> 00:02:42.746
No nosso caso, só a coluna 3.

00:02:42.780 --> 00:02:46.014
Depois, somente linhas
com dados ausentes,

00:02:46.048 --> 00:02:49.663
então, não são todas,
ou seja, how='any'.

00:02:49.697 --> 00:02:52.222
Poderíamos especificar isso,
mas também é o padrão.

00:02:52.256 --> 00:02:55.008
E queremos eliminar a linha,

00:02:55.042 --> 00:02:58.225
então dizemos axis=0.

00:02:58.259 --> 00:03:04.183
Então, parece que,
se houver dados ausentes em 3...

00:03:04.217 --> 00:03:06.810
Se voltarmos para cima...

00:03:06.844 --> 00:03:10.399
Deveríamos
ter eliminado 0 e 2,

00:03:10.433 --> 00:03:13.010
então, devemos
ter 1, 3, 4 e 5,

00:03:13.044 --> 00:03:17.859
porque 0 e 2 tinham
dados ausentes na coluna 3.

00:03:17.893 --> 00:03:21.400
1, 3, 4 e 5.
Ficou como eu esperava.

00:03:21.434 --> 00:03:23.491
Se executarmos a solução,

00:03:23.525 --> 00:03:25.463
ele diz:
"Ótimo trabalho! Está certo."

00:03:25.497 --> 00:03:28.855
Este último diz para eliminar
somente as linhas

00:03:28.889 --> 00:03:32.334
com dados ausentes
na coluna 3 ou na coluna 1.

00:03:32.368 --> 00:03:36.051
De novo, vamos eliminar
as linhas, então axis=0.

00:03:36.085 --> 00:03:38.538
Axis=0.

00:03:38.572 --> 00:03:44.489
E no subset,
queremos col1 e col3.

00:03:45.055 --> 00:03:49.016
Se houver dados ausentes
na coluna 3 ou na coluna 1,

00:03:49.050 --> 00:03:51.457
damos uma lista dessas coisas.

00:03:51.491 --> 00:03:54.662
Se quiséssemos
olhar 5 colunas,

00:03:54.696 --> 00:03:57.371
daríamos uma lista
com os nomes dessas 5 colunas

00:03:57.405 --> 00:04:00.814
e, se houvesse dados ausentes
nelas, elas seriam eliminadas.

00:04:00.848 --> 00:04:03.875
Voltando para cima,
podemos ver se está certo.

00:04:03.909 --> 00:04:07.390
A coluna 1 deve sugerir
que eliminemos 2 e 3,

00:04:07.424 --> 00:04:11.196
e a coluna 3 sugere
eliminar 0 e 2.

00:04:11.230 --> 00:04:14.495
Então, devemos
eliminar 0, 2 e 3

00:04:14.529 --> 00:04:19.359
e ficar com 1, 4 e 5,
de acordo com esses resultados.

00:04:19.393 --> 00:04:22.706
Então, 1, 4 e 5.
Ficou como eu esperava.

00:04:22.740 --> 00:04:26.142
Ao executarmos o teste,
ele diz: "Bom trabalho!"

00:04:26.176 --> 00:04:28.659
Legal. Parece que estamos
prontos para a próxima.

