WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.030
Finally, we want to make recommendations.

00:00:04.030 --> 00:00:06.839
The whole idea is that, we want to make

00:00:06.839 --> 00:00:10.140
content-based recommendations for the individuals

00:00:10.140 --> 00:00:14.410
who didn't have collaborative filtering-based recommendations before.

00:00:14.900 --> 00:00:20.905
Now, just following the comments here for user and users.

00:00:20.905 --> 00:00:24.300
For each user, update the progress bar.

00:00:24.300 --> 00:00:29.780
So, the counter's going to go up by one.

00:00:33.619 --> 00:00:36.669
Update that. So then,

00:00:36.670 --> 00:00:39.975
we're going to pull only the reviews that the user has seen.

00:00:39.975 --> 00:00:42.454
So, if you remember,

00:00:42.454 --> 00:00:48.409
this ranked_reviews is a DataFrame that we created that basically is ordered by

00:00:48.409 --> 00:00:55.429
the movies that the user has seen and for each user from highest to lowest ranking,

00:00:55.429 --> 00:00:59.019
this DataFrame sort of shows the movies that they've seen.

00:00:59.020 --> 00:01:02.920
I'm just going to call this temp.

00:01:04.790 --> 00:01:08.255
So, we're going to do that, we're going to look at

00:01:08.254 --> 00:01:11.394
each of the movies from highest to lowest.

00:01:11.394 --> 00:01:17.569
So, I'm going to just create an array of the movie ID,

00:01:17.569 --> 00:01:20.469
and then what we want to do is we want to pull the movie names.

00:01:20.469 --> 00:01:24.439
So, movie_names, and we're

00:01:24.439 --> 00:01:28.659
going to use the get_movie_names function that we wrote up there.

00:01:28.659 --> 00:01:31.000
I'm going to pass in the movie_ids.

00:01:31.189 --> 00:01:33.480
Then finally, what we want to do,

00:01:33.480 --> 00:01:35.160
is we want to find similar movies,

00:01:35.159 --> 00:01:36.649
so we wrote this.

00:01:36.650 --> 00:01:39.930
The part that we wrote was to find similar movies to that

00:01:39.930 --> 00:01:43.490
basically for the movies that the user has seen and they've ranked high,

00:01:43.489 --> 00:01:48.869
we want to pull other similar movies and recommend those movies to the user.

00:01:48.870 --> 00:01:52.865
So, for movie in movie.

00:01:52.864 --> 00:01:55.084
So we're going to pull the movie ID,

00:01:55.084 --> 00:01:56.569
we're going to get the most similar ones,

00:01:56.569 --> 00:01:58.504
we'll store that in rec_movies,

00:01:58.504 --> 00:02:03.349
and then we'll take the difference between the movies that they've already

00:02:03.349 --> 00:02:08.319
seen and the new movies that we're recommending to them.

00:02:08.319 --> 00:02:11.349
We don't want to recommend the movies that they've already seen still,

00:02:11.349 --> 00:02:14.329
and then basically what we'll do is we'll

00:02:14.330 --> 00:02:17.650
take the original recommendations that were given to this user,

00:02:17.650 --> 00:02:21.379
and we're going to add these new recommendations

00:02:21.379 --> 00:02:25.460
based on content-based recommendations to those recs.

00:02:25.460 --> 00:02:29.165
So, they have a bunch of recommendations from the collaborative filtering based method.

00:02:29.164 --> 00:02:31.414
Now, we're basically going to update

00:02:31.414 --> 00:02:34.804
that collaborative filtering-based recommendation

00:02:34.805 --> 00:02:40.379
with some additional content-based recommendations, where possible.

00:02:40.379 --> 00:02:50.469
Again, we'll say, if the length of the recommendations for that user exceeds nine, right.

00:02:50.469 --> 00:02:52.020
If we have 10 or more recommendations,

00:02:52.020 --> 00:02:54.885
then we'll just break for that user.

00:02:54.884 --> 00:02:57.639
Yeah. So, we're going to break for that user,

00:02:57.639 --> 00:03:01.019
and so that'll go out of this and then go and grab the next user,

00:03:01.020 --> 00:03:03.435
right that's just breaking from making content.

00:03:03.435 --> 00:03:07.735
This break is only breaking from making content-based recommendations.

00:03:07.735 --> 00:03:12.185
So, one potential solution looks like,

00:03:12.185 --> 00:03:14.229
there are multiple ways that you could do this.

00:03:14.229 --> 00:03:17.780
Again, this is sort of like taking those recommendations for each user,

00:03:17.780 --> 00:03:20.944
and updating the collaborative filtering-based recommendations

00:03:20.944 --> 00:03:23.879
with content-based recommendations.

00:03:24.939 --> 00:03:30.979
I got an error. Users wasn't defined what'll I call this up here.

00:03:30.979 --> 00:03:36.689
Technically, I have this as just like users who need recs.

00:03:36.689 --> 00:03:39.859
So, if the users already have recommendations,

00:03:39.860 --> 00:03:43.205
then we're not going to make more recommendations for them.

00:03:43.205 --> 00:03:47.735
So, I'm just going to say, do this for just the users who need recommendations,

00:03:47.735 --> 00:03:51.710
go through them and do this process.

00:03:57.900 --> 00:04:00.890
This one's pretty fast.

