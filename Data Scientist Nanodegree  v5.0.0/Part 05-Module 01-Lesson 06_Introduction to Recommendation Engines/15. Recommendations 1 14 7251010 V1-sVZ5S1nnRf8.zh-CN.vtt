WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.970
接下来我们将学习斯皮尔曼相关系数

00:00:03.970 --> 00:00:06.405
斯皮尔曼相关系数

00:00:06.405 --> 00:00:07.705
处理的是排名

00:00:07.705 --> 00:00:10.679
一切与排名有关

00:00:10.679 --> 00:00:14.355
这是一个排名示例

00:00:14.355 --> 00:00:17.160
排名值从 1 到 7

00:00:17.160 --> 00:00:20.199
虽然原始值从 -3 到 3

00:00:20.199 --> 00:00:21.399
这是最小值

00:00:21.399 --> 00:00:22.604
排名值为 1

00:00:22.605 --> 00:00:24.899
这是第二小的值 排名值为 2

00:00:24.899 --> 00:00:28.489
我们可以使用这个 rank() 函数

00:00:28.489 --> 00:00:30.524
再来看看公式

00:00:30.524 --> 00:00:33.659
和刚才的公式很像

00:00:33.659 --> 00:00:36.719
但是这里多了个上标 r

00:00:36.719 --> 00:00:40.195
我们先将原始数组变成已排名版本

00:00:40.195 --> 00:00:44.765
然后再应用任何公式

00:00:44.765 --> 00:00:48.439
Great如果要计算斯皮尔曼相关系数

00:00:48.439 --> 00:00:53.920
则在这里输入 x = x.rank y = y.rank

00:00:53.920 --> 00:00:56.570
先运行 rank()

00:00:56.570 --> 00:01:00.679
将 x 和 y 存储为已排名版本

00:01:00.679 --> 00:01:06.640
然后和上面的步骤完全一样

00:01:06.640 --> 00:01:10.525
应该很好明白的

00:01:10.525 --> 00:01:12.469
计算均值

00:01:12.469 --> 00:01:14.179
x 是已排名版本

00:01:14.180 --> 00:01:15.310
y 是已排名版本

00:01:15.310 --> 00:01:16.879
计算差值

00:01:16.879 --> 00:01:19.170
就像这样在分母中

00:01:19.170 --> 00:01:23.700
计算相同的标准差应该没问题

00:01:23.700 --> 00:01:27.700
看起来一切都正常

00:01:27.700 --> 00:01:31.840
下面看几个问题

00:01:31.840 --> 00:01:33.100
如果 x 增大 y 也增大

00:01:33.099 --> 00:01:35.724
那么斯皮尔曼相关系数将为 1

00:01:35.724 --> 00:01:37.629
这句话正确好的

00:01:37.629 --> 00:01:43.569
斯皮尔曼相关系数衡量的是两个事物的单调变化

00:01:43.569 --> 00:01:44.809
它们始终朝着相同的方向移动

00:01:44.810 --> 00:01:47.689
还是朝着不同的方向移动

00:01:47.689 --> 00:01:52.634
而皮尔逊相关系数衡量的是它们是否完全线性地移动

00:01:52.635 --> 00:01:55.935
只要皮尔逊系数为 1

00:01:55.935 --> 00:01:57.530
斯皮尔曼系数也为 1

00:01:57.530 --> 00:01:59.329
但是反过来不一定正确

00:01:59.329 --> 00:02:01.370
如果斯皮尔曼系数为 1

00:02:01.370 --> 00:02:03.439
皮尔逊系数不一定为 1

00:02:03.439 --> 00:02:06.810
如果当 x 增加 1 时 y 减少...

00:02:06.810 --> 00:02:11.360
这句话正确 最后一句话也正确

00:02:11.360 --> 00:02:14.405
所有这些都是单调变化

00:02:14.405 --> 00:02:18.169
所以所有这些对于斯皮尔曼系数来说都正确

