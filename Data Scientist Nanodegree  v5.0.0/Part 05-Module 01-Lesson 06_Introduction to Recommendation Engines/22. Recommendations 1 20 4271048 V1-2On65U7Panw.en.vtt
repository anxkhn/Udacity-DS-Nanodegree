WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:06.870
In the next part we're asked to create a DataFrame similar to the reviews

00:00:06.870 --> 00:00:09.794
but ranked by the rating for each user.

00:00:09.794 --> 00:00:16.214
So basically, what we want to do in this part is to create a DataFrame where we sort

00:00:16.214 --> 00:00:23.035
our values by the user ID first to keep all the user IDs together.

00:00:23.035 --> 00:00:27.344
But then next we want to sort by the rating that they're given.

00:00:27.344 --> 00:00:32.379
I'm just going to start this and ranked reviews.

00:00:32.659 --> 00:00:37.319
Okay. Then, I didn't read in the images but

00:00:37.320 --> 00:00:41.384
if you're looking in the classroom or you're looking at the images yourself,

00:00:41.384 --> 00:00:45.739
basically what this is saying is if we take the dot product between two vectors

00:00:45.740 --> 00:00:48.650
and we get something that's greater than zero,

00:00:48.649 --> 00:00:51.515
that gives us an indication that there's some overlap

00:00:51.515 --> 00:00:54.924
between the two things that those vectors share.

00:00:54.924 --> 00:00:59.119
So, in terms of our content-based recommendations we

00:00:59.119 --> 00:01:03.695
can have a vector that look like this.

00:01:03.695 --> 00:01:08.435
If we take the dot product of this vector with itself and one of them its transpose,

00:01:08.435 --> 00:01:10.810
then what we would get is a two.

00:01:10.810 --> 00:01:13.430
Basically what that means is that there were two things that were

00:01:13.430 --> 00:01:17.190
shared between those two pieces of content.

00:01:17.189 --> 00:01:20.459
The larger that number the more pieces of information they share,

00:01:20.459 --> 00:01:23.864
and the smaller that number the less information they share.

00:01:23.864 --> 00:01:28.609
So, the nice part with this is that we can use the dot product to

00:01:28.609 --> 00:01:32.829
then determine what movies are most alike other movies.

00:01:32.829 --> 00:01:48.629
So, which movies are most similar.

00:01:48.629 --> 00:01:50.574
Sorry, I shouldn't have called this movies.

00:01:50.575 --> 00:01:54.969
Because I overwrote the movies DataFrame.

00:01:58.280 --> 00:02:07.219
So, the first thing

00:02:07.219 --> 00:02:11.830
I want to do is just pull the parts of the movies DataFrame

00:02:11.830 --> 00:02:14.290
that are related to the content,

00:02:14.289 --> 00:02:17.819
which means we don't need the first three columns.

00:02:17.819 --> 00:02:22.120
So, I don't need the first three columns I only need the fourth column through will be

00:02:22.120 --> 00:02:27.914
end of the DataFrame to be able to make content-based recommendations.

00:02:27.914 --> 00:02:32.275
Essentially, what we know from taking dot product is that if we take

00:02:32.275 --> 00:02:37.275
this matrix and we take the dot product of that matrix with itself transposed,

00:02:37.275 --> 00:02:40.340
then that should give us an idea,

00:02:40.340 --> 00:02:44.930
it'll give us a new matrix that tells us which movies are most similar to one another.

00:02:44.930 --> 00:02:48.224
So, I'm just going this dot prod movies.

00:02:48.224 --> 00:02:53.229
We're going the.product dot product of this movies matrix with itself transposed,

00:02:53.229 --> 00:02:56.074
and then that will give us this dot product movies

00:02:56.074 --> 00:02:59.894
which gives us some idea of which movies are most related to one another.

00:02:59.895 --> 00:03:03.469
Where on the diagonal elements of this are going to be

00:03:03.469 --> 00:03:08.784
the highest possible value which is the dot product of each movie with itself.

00:03:08.784 --> 00:03:13.270
So, that's the sum of the number of ones that are available in that movie row.

00:03:13.270 --> 00:03:15.800
So, this is probably going to take some time

00:03:15.800 --> 00:03:20.064
and then we can check our answer against the solution.

00:03:20.064 --> 00:03:25.145
If you correctly take the dot product of the content portions,

00:03:25.145 --> 00:03:26.920
you should get something that looks like this,

00:03:26.919 --> 00:03:29.489
that says that you passed all the tests.

