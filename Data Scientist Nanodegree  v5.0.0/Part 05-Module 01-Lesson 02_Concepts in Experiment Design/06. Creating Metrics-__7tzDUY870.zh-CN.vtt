WEBVTT
Kind: captions
Language: zh-CN

00:00:04.519 --> 00:00:09.149
再看看之前的示例

00:00:09.150 --> 00:00:11.669
我们向在线商店中添加了一个快览叠加页面

00:00:11.669 --> 00:00:15.259
并用一些术语解释了设计细节

00:00:15.259 --> 00:00:19.320
注意 我们假设在用户搜索商品后

00:00:19.320 --> 00:00:25.324
向商品图片上添加快览叠加页面可能会提高用户的总购买量

00:00:25.324 --> 00:00:30.829
你需要描述用户如何从访问网站

00:00:30.829 --> 00:00:33.155
一直到完成购买交易

00:00:33.155 --> 00:00:36.035
思考下你是如何从网站购买商品的

00:00:36.034 --> 00:00:37.879
首先访问首页

00:00:37.880 --> 00:00:43.115
然后在搜索栏中输入商品 网站随即会显示一个商品列表

00:00:43.115 --> 00:00:45.440
点击商品图片后

00:00:45.439 --> 00:00:48.189
你将转到商品信息页

00:00:48.189 --> 00:00:54.024
然后 你可以将商品添加到购物车中 接着要么继续购物 要么结账

00:00:54.024 --> 00:00:59.570
这种从头到尾的流程称为用户漏斗

00:00:59.570 --> 00:01:03.590
如果添加新的叠加页面 用户漏斗会如何变化？

00:01:03.590 --> 00:01:07.594
对于实验组或快览叠加组中的用户

00:01:07.594 --> 00:01:11.844
漏斗会向商品图片上添加摘要叠加页面

00:01:11.844 --> 00:01:15.859
除了标准商品页之外

00:01:15.859 --> 00:01:20.284
该组的用户还可以使用快览叠加页面将商品添加到购物车中

00:01:20.284 --> 00:01:26.454
现在 我们需要决定在该流程的什么阶段将用户划分为两组

00:01:26.454 --> 00:01:29.929
一种实验运行方式是

00:01:29.930 --> 00:01:33.940
向访问网站的用户分配一个网站 Cookie

00:01:33.939 --> 00:01:36.829
该 Cookie 在会话中会保留

00:01:36.829 --> 00:01:40.010
用于判断用户访问的是哪个版本的网站

00:01:40.010 --> 00:01:44.775
我们可以用分组单位一词来描述这种方法

00:01:44.775 --> 00:01:46.570
分组单位

00:01:46.569 --> 00:01:48.214
在此示例中是指 Cookie

00:01:48.215 --> 00:01:52.165
表示划分观察值的位置

00:01:52.165 --> 00:01:55.685
接下来我们将选择评估指标

00:01:55.685 --> 00:01:59.155
并根据这些指标比较两组数据

00:01:59.155 --> 00:02:04.310
这些值将告诉我们实验是否成功了

00:02:04.310 --> 00:02:09.145
好的指标包括每个用户的总净购买量

00:02:09.145 --> 00:02:12.945
或者在每种情形下购买商品的访问者所占比例

00:02:12.944 --> 00:02:15.194
我们并非只能使用一个指标

00:02:15.194 --> 00:02:19.775
当叠加页面改变两个指标的方式不一样时 我们可以同时跟踪这两种指标

00:02:19.775 --> 00:02:24.770
还可以跟踪预计在两组之间没有变化的指标

00:02:24.770 --> 00:02:29.284
这些指标可以验证除了要实验的条件之外

00:02:29.284 --> 00:02:34.174
对照组和实验组之间是对等的

00:02:34.175 --> 00:02:40.760
检查对等性的指标称为不变指标

00:02:40.759 --> 00:02:44.194
在此示例中 不变指标的示例包括

00:02:44.194 --> 00:02:47.780
每组生成的 Cookie 数量

00:02:47.780 --> 00:02:51.020
如果随机化过程正确的话

00:02:51.020 --> 00:02:55.900
那么每种情形分配的访问者人数应该差不多

00:02:55.900 --> 00:02:59.599
我们还可以计算分配到每种情形的已登录用户的人数

00:02:59.599 --> 00:03:04.769
从而控制历史购买行为带来的影响

