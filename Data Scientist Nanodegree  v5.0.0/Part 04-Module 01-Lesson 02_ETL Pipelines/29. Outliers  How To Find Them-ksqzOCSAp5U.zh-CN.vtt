WEBVTT
Kind: captions
Language: zh-CN

00:00:04.879 --> 00:00:10.294
离群值是指和其他数据相距很远的数据点

00:00:10.294 --> 00:00:14.759
数据集中出现离群值的原因和出现缺失值类似

00:00:14.759 --> 00:00:20.109
离群值可能是因为数据录入错误或者处理时的错误

00:00:20.109 --> 00:00:24.210
或者离群值可能就是合法的 因为在任何情况下 

00:00:24.210 --> 00:00:28.490
总有可能得到极端值

00:00:28.489 --> 00:00:31.139
需要反思的问题有

00:00:31.140 --> 00:00:32.670
如何找到离群值

00:00:32.670 --> 00:00:34.560
以及一旦你找到了

00:00:34.560 --> 00:00:36.160
你应该如何处理它们

00:00:36.159 --> 00:00:39.409
首先 你会介绍几种检测离群值的方法

00:00:39.409 --> 00:00:43.414
然后探讨如果处理离群值

00:00:43.414 --> 00:00:46.274
当处理一或二维数据时

00:00:46.274 --> 00:00:49.954
你可以使用数据可视化的方法来检测离群值

00:00:49.954 --> 00:00:52.155
对于一维数据

00:00:52.155 --> 00:00:54.685
你可以在数轴上标出所有数据

00:00:54.685 --> 00:00:58.130
一个落在数轴上特别靠左或者靠右的数据点

00:00:58.130 --> 00:01:02.030
会被认为是离群值

00:01:02.030 --> 00:01:06.275
你还可以使用二维图像来检测离群值

00:01:06.275 --> 00:01:11.435
在这幅图像中 显然有一个点离其他点都很远

00:01:11.435 --> 00:01:14.629
检测离群值还有一些统计学的方法

00:01:14.629 --> 00:01:17.795
这里有一些代码练习

00:01:17.795 --> 00:01:22.969
包括使用正态分布产生的 z 分数或者Tukey检测法

00:01:22.969 --> 00:01:27.465
这两种方法都使用了基本的统计量 如平均数

00:01:27.465 --> 00:01:30.409
标准差或者分位数

00:01:30.409 --> 00:01:34.500
来检测距离大多数数据点很远的离群值

00:01:34.500 --> 00:01:39.269
目前为止 我们讨论了如何检测一维或二维的离群值

00:01:39.269 --> 00:01:42.709
如何检测三维甚至更高维度的离群值

00:01:42.709 --> 00:01:44.284
你可以 比如

00:01:44.284 --> 00:01:49.939
使用机器学习算法 如PCA 将数据维度降到一维或者二维

00:01:49.939 --> 00:01:54.754
然后再使用上述的图像或者统计的方法

00:01:54.754 --> 00:01:58.444
另一个例子是使用聚类算法

00:01:58.444 --> 00:02:00.919
这种情况下 你要先计算

00:02:00.920 --> 00:02:03.469
聚类的中心 然后衡量

00:02:03.469 --> 00:02:06.784
每个数据点到中心的距离

00:02:06.784 --> 00:02:10.875
距离大意味着是离群值

00:02:10.875 --> 00:02:15.740
scikit-learn 同样包含很多离群值检测算法

00:02:15.740 --> 00:02:17.460
下面是一些链接

00:02:17.460 --> 00:02:21.640
接下来 你将练习如何找到离群值

