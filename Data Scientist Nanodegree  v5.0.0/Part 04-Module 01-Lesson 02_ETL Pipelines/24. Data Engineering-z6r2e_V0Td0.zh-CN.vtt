WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:06.509
实际上 SQL是每个人都应该学习的一项基础技能

00:00:06.509 --> 00:00:08.769
而且它不是一门非常难学的语言

00:00:08.769 --> 00:00:13.019
我发现很多人因为工作才学习它

00:00:13.019 --> 00:00:17.884
但它本身就是一项很重要的技术

00:00:17.885 --> 00:00:23.910
我几乎想不起来过去的几年中哪天我没写过 SQL 查询语句

00:00:23.910 --> 00:00:25.449
它们很复杂吗？

00:00:25.449 --> 00:00:27.769
它们仅仅是 select from  where 语句

00:00:27.769 --> 00:00:30.329
然后你就得到了一个可以定期执行的子查询语句

00:00:30.329 --> 00:00:32.809
你在写它们的时候是否考虑过效率问题

00:00:32.810 --> 00:00:36.350
是的 这要看情况而定 比如在要快速做一些数据分析的时候

00:00:36.350 --> 00:00:38.265
你不需要太过纠结

00:00:38.265 --> 00:00:42.840
我们只要编写查询语句 回答你的问题即可

00:00:42.840 --> 00:00:46.130
这是问题导向的任务

00:00:46.130 --> 00:00:51.335
不过 有时候你得搭建一个 ETL 管道

00:00:51.335 --> 00:00:54.410
提取 (extract) 转换(transform) 加载(load)

00:00:54.409 --> 00:00:56.964
这是我们搭建数据管道时使用的专业术语

00:00:56.965 --> 00:00:58.400
在你搭建数据管道的时候

00:00:58.399 --> 00:01:00.739
需要更加仔细

00:01:00.740 --> 00:01:03.520
需要更加结构化的思维

00:01:03.520 --> 00:01:06.240
比如你在做右连接操作

00:01:06.239 --> 00:01:08.339
你要把更大的表格放在左边

00:01:08.340 --> 00:01:10.695
语言不同 语法也不同

00:01:10.694 --> 00:01:15.209
这些事情都很重要

00:01:15.209 --> 00:01:18.804
但我觉得这不值得去记

00:01:18.805 --> 00:01:20.515
重要的是 你遇到一个问题

00:01:20.515 --> 00:01:22.405
然后尝试找到答案

00:01:22.405 --> 00:01:27.079
听起来你好像是经常优化各种操作的人

00:01:27.079 --> 00:01:29.599
而不是团队的其他成员帮你做这件事

00:01:29.599 --> 00:01:32.409
你是有数据工程师同时专门做这些 还是说

00:01:32.409 --> 00:01:35.564
这些技能是你做数据科学家的日常工作的时候就用得到的？

00:01:35.564 --> 00:01:37.054
问得好

00:01:37.055 --> 00:01:42.085
实际上我认为我的知识是根据需要现用现学的

00:01:42.084 --> 00:01:45.469
不过 因为我做很多的数据工程工作

00:01:45.469 --> 00:01:49.679
我从那些比我优秀的人身上学到很多

00:01:49.680 --> 00:01:52.020
不断地我就越来越擅长这方面

00:01:52.019 --> 00:01:56.390
所以说 你觉得 你喜欢

00:01:56.390 --> 00:01:58.409
从数据工程师身上学到的技能

00:01:58.409 --> 00:02:00.920
从日常工作中学到这些很开心

00:02:00.920 --> 00:02:05.189
是的这是个很好的话题 

00:02:05.189 --> 00:02:08.514
我记得几年前

00:02:08.514 --> 00:02:11.599
我问过我自己相同的问题 因为我当时想学习

00:02:11.599 --> 00:02:15.289
数据工程 我在上网搜索资料 但没有找到什么有用的信息

00:02:15.289 --> 00:02:19.969
在加入 Airbnb 后  我加入了他们的工程项目

00:02:19.969 --> 00:02:25.060
和那些工程师一起工作 有几件事我认为很重要

00:02:25.060 --> 00:02:33.348
首先 要对数据建模有基本的认识

00:02:33.348 --> 00:02:38.905
这样才能对如何设计数据仓库有概念

00:02:38.905 --> 00:02:40.925
他们的数据表 (data table) 使用的是星型架构 star schema

00:02:40.925 --> 00:02:47.120
所以 事实表 (fact table) 或维度表 (dimension table) 

00:02:47.120 --> 00:02:50.300
为什么这两个概念是不同的？ 

00:02:50.300 --> 00:02:53.765
如何结合这两种方法来构建数据仓库？

00:02:53.764 --> 00:02:58.919
另一个概念是数据回填 (data backfilling) 

00:02:58.919 --> 00:03:02.159
你在搭建 ETL 管道的时候

00:03:02.159 --> 00:03:05.254
应该是一个可自动化的成果

00:03:05.254 --> 00:03:08.525
把你的指标计算出来

00:03:08.525 --> 00:03:14.460
但接下来有时候你想要能够分析历史数据 历史趋势

00:03:14.460 --> 00:03:17.030
对于这种情况

00:03:17.030 --> 00:03:22.849
你实际上不得不重新计算指标和历史

00:03:22.849 --> 00:03:27.000
所以数据回填就非常重要

00:03:27.000 --> 00:03:29.080
这个工作也非常费时

00:03:29.080 --> 00:03:32.660
所以 我认为 需要知道如何恰当地回填

00:03:32.659 --> 00:03:36.829
并监控整个回填的进度很重要

00:03:36.830 --> 00:03:40.280
但学校一般不教

00:03:40.800 --> 00:03:49.130
最后 搭建 ETL 管道方面 我从工作中学到的技巧

00:03:49.500 --> 00:03:52.520
就是 要分情况

00:03:52.520 --> 00:03:57.935
在 Airbnb 我们使用 airflow 这是一个很有用的开源项目

00:03:57.935 --> 00:04:03.485
不应该仅仅能够写出临时的脚本应急

00:04:03.485 --> 00:04:09.685
还应该将你的查询语句整合到你的 ETL 工作中 日常自动运行

00:04:09.685 --> 00:04:13.715
我觉得这是一个对数据科学家来说非常有用的技能

00:04:13.715 --> 00:04:18.875
它会让你的工作更顺畅

00:04:18.875 --> 00:04:21.079
不需要等数据工程师们帮你写 ETL 占着数据

00:04:21.079 --> 00:04:24.099
你一个人就能完成所有事情

00:04:24.100 --> 00:04:25.080
没错

