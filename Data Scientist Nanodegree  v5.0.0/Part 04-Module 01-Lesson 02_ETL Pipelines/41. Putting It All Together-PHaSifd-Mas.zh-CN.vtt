WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.149
最后一个练习里

00:00:02.149 --> 00:00:05.410
你要编写整个 ETL 管道的代码

00:00:05.410 --> 00:00:08.660
我先带你浏览一下这个 Jupyter notebook

00:00:08.660 --> 00:00:10.570
让你更清楚

00:00:10.570 --> 00:00:13.755
各部分代码的作用 以及你需要填写的内容

00:00:13.755 --> 00:00:19.914
第一个单元格连接到一个叫worldbank.db 的 SQLite 数据库

00:00:19.914 --> 00:00:25.964
创建一个用来保存 GDP 数据的表格

00:00:25.964 --> 00:00:31.774
你只需要运行这个单元格即可

00:00:31.774 --> 00:00:35.085
在 ETL 管道的后段

00:00:35.085 --> 00:00:38.840
你要把数据加载到这个表格里

00:00:38.840 --> 00:00:42.965
第二个单元格 有一个函数 extract_line

00:00:42.965 --> 00:00:46.020
同样 你只需要

00:00:46.020 --> 00:00:48.215
运行这个单元格

00:00:48.215 --> 00:00:51.820
这个函数是一个 Python 的生成器

00:00:51.820 --> 00:00:54.649
是否理解这个生成器如何工作

00:00:54.649 --> 00:00:58.129
不会影响你通过这个项目

00:00:58.130 --> 00:01:01.040
但如果你打开注释中的链接阅读一些代码

00:01:01.039 --> 00:01:04.709
可能对你有帮助

00:01:04.709 --> 00:01:09.259
本质上 生成器和普通的函数一样

00:01:09.260 --> 00:01:11.285
只是 return 语句不同

00:01:11.284 --> 00:01:14.144
生成器使用的是 yield 语句

00:01:14.144 --> 00:01:19.004
你可以在 for 循环里使用生成器

00:01:19.004 --> 00:01:24.724
所以 生成器可以实现每次读进数据文件的一行

00:01:24.724 --> 00:01:28.304
对该行数据进行转换

00:01:28.305 --> 00:01:34.205
加载数据 然后继续处理下一行数据 不断循环

00:01:34.204 --> 00:01:38.459
第三个单元格 你要开始写代码了

00:01:38.459 --> 00:01:43.674
这个单元格包含一个叫做 transform_indicator_data 的函数

00:01:43.674 --> 00:01:46.819
这个函数从一个 csv 文件接收一行数据

00:01:46.819 --> 00:01:52.579
然后进行转换 为加载步骤做准备

00:01:52.579 --> 00:01:57.640
记得这个 csv 文件中数据的结构

00:01:57.640 --> 00:01:59.644
有 国家名

00:01:59.644 --> 00:02:01.859
指标变量

00:02:01.859 --> 00:02:03.995
还有一列是年份

00:02:03.995 --> 00:02:09.259
这和你之前在练习中使用的 GDP 数据是一样的

00:02:09.259 --> 00:02:14.474
你的任务是叫这些数据转换成 列表的列表 (a list of lists)

00:02:14.474 --> 00:02:17.368
每个子列表包含 国家

00:02:17.368 --> 00:02:22.099
国家简称 年份 和 数值

00:02:22.099 --> 00:02:27.650
第四个单元格 有一个函数 叫做 load_indicator_data,

00:02:27.650 --> 00:02:30.844
你需要补全这个函数的代码

00:02:30.844 --> 00:02:38.500
这个函数将转换好的数据加载到 worldbank.db 数据库的GDP 表格中

00:02:38.500 --> 00:02:39.974
在这部分代码中

00:02:39.974 --> 00:02:45.585
你要使用 SQL 语句 将每个数据项加入到数据库中

00:02:45.585 --> 00:02:49.064
第五个单元格是运行整个 ETL 管道

00:02:49.064 --> 00:02:54.125
你只需要运行这段代码就可以了

00:02:54.125 --> 00:02:57.469
但为了理解你在做什么 先通读这段代码

00:02:57.469 --> 00:02:59.090
这段代码用到了

00:02:59.090 --> 00:03:04.094
事先加载到Jupyter notebook 中的 extract_lines

00:03:04.094 --> 00:03:07.219
第六个单元格 对数据库运行了一条查询语句

00:03:07.219 --> 00:03:10.465
保证数据库正常运行

00:03:10.465 --> 00:03:16.965
你只需要运行这段代码 保证输出正常即可

00:03:16.965 --> 00:03:19.278
提醒一下

00:03:19.278 --> 00:03:24.169
你只需要修改 Jupyter notebook 里的第三和第四个单元格

00:03:24.169 --> 00:03:27.069
其他的单元格你只需要运行一下

