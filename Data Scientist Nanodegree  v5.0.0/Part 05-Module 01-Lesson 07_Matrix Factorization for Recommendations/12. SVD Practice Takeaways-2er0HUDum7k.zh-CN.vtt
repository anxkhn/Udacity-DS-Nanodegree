WEBVTT
Kind: captions
Language: zh-CN

00:00:03.859 --> 00:00:06.089
在上个 notebook 中

00:00:06.089 --> 00:00:10.969
你运用所学的技能对 MovieTweetings 数据的子集实施了 SVD

00:00:10.970 --> 00:00:16.250
第一个分析要点是潜在特征没有标记

00:00:16.250 --> 00:00:20.579
我们也许可以根据不同电影的权重

00:00:20.579 --> 00:00:23.429
推断出潜在特征

00:00:23.429 --> 00:00:28.875
但是没有像在上个视频里看到的清晰特征标签

00:00:28.875 --> 00:00:31.365
所以这些特征是潜在的

00:00:31.364 --> 00:00:36.104
第二个要点是 ∑ 矩阵存储的值

00:00:36.104 --> 00:00:40.944
可以告诉我们特定的潜在特征

00:00:40.945 --> 00:00:44.090
能够解释原始用户-电影矩阵的变化量是多少

00:00:44.090 --> 00:00:46.940
这很有用 因为做出好的预测

00:00:46.939 --> 00:00:50.224
可能不需要所有的潜在特征

00:00:50.225 --> 00:00:52.969
查看 ∑ 矩阵中的元素后

00:00:52.969 --> 00:00:56.899
我们可以决定要保留多少个潜在特征

00:00:56.899 --> 00:01:01.469
通过计算对角线元素的平方和

00:01:01.469 --> 00:01:05.525
能够得出矩阵中要解释的总变化量

00:01:05.525 --> 00:01:10.430
然后 每个潜在特征解释的变化量

00:01:10.430 --> 00:01:16.050
等于对角线元素的平方除以这个和

00:01:16.049 --> 00:01:19.159
最后一点最重要

00:01:19.159 --> 00:01:24.155
当矩阵缺少值时 我们不能使用 SVD

00:01:24.155 --> 00:01:28.439
传统 SVD 适合这样的情形

00:01:28.439 --> 00:01:32.965
因为这些矩阵具有特征值和特征向量

00:01:32.965 --> 00:01:36.814
但是不适合这样的情形

00:01:36.814 --> 00:01:38.519
这很糟糕

00:01:38.519 --> 00:01:40.704
因为在做出推荐时

00:01:40.704 --> 00:01:43.939
矩阵一般都是这样的

00:01:43.939 --> 00:01:48.079
这时候 Simon Funk 的 FunkSVD 就派上用场了

