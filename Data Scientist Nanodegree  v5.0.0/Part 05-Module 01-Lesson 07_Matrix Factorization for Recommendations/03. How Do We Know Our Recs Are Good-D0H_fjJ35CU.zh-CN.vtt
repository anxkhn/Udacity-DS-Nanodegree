WEBVTT
Kind: captions
Language: zh-CN

00:00:04.790 --> 00:00:07.049
在上节课

00:00:07.049 --> 00:00:10.320
你使用不同的方法做出了多次推荐

00:00:10.320 --> 00:00:13.665
但是 我们并没有查看

00:00:13.664 --> 00:00:17.174
用户甚至是否喜欢我们的推荐

00:00:17.175 --> 00:00:21.005
在实践中 我们在实施推荐系统之前

00:00:21.004 --> 00:00:23.489
可以查看一个特定的指标

00:00:23.489 --> 00:00:29.059
例如与用户互动、下载量或收入相关的指标

00:00:29.059 --> 00:00:32.039
在实施推荐引擎之后

00:00:32.039 --> 00:00:35.575
我们可以再查看该指标 看看效果如何

00:00:35.575 --> 00:00:39.540
在实践中选择如何以最佳方式实现推荐引擎时

00:00:39.539 --> 00:00:44.685
在这门课程的实验设计部分学习的所有概念都会派上用场

00:00:44.685 --> 00:00:47.719
但是如果你想在针对真实用户使用推荐引擎之前

00:00:47.719 --> 00:00:52.545
先了解下推荐引擎的效果 该怎么办？

00:00:52.545 --> 00:00:54.645
我们可以采用与你已经熟悉的

00:00:54.645 --> 00:00:56.220
机器学习技巧相似的技巧

00:00:56.219 --> 00:01:00.899
建议你将数据拆分为训练部分和测试部分

00:01:00.899 --> 00:01:04.250
你需要将推荐系统应用到训练集上

00:01:04.250 --> 00:01:07.375
然后使用测试集评估效果

00:01:07.375 --> 00:01:10.340
如果收集的评分是随着时间的推移获得的

00:01:10.340 --> 00:01:13.015
你应该将最新数据作为测试集

00:01:13.015 --> 00:01:18.280
这样就可以避免使用未来数据预测过去的数据

00:01:18.280 --> 00:01:21.379
以 Allie 为例

00:01:21.379 --> 00:01:23.884
她喜欢《复仇者联盟》和《蜘蛛侠》

00:01:23.885 --> 00:01:27.885
我们可以向她推荐《洛奇》和《超人总动员》

00:01:27.885 --> 00:01:31.165
但是 如果她依然没有看过这两部电影

00:01:31.165 --> 00:01:34.160
那么我们不知道这些预测实际上是否效果不错

00:01:34.159 --> 00:01:38.450
我们可以预测每部电影的评分

00:01:38.450 --> 00:01:44.395
然后将用户实际观看的电影的评分与我们的预测进行比较

00:01:44.394 --> 00:01:49.829
如果我们能够预测测试集中的每个用户-项目组合

00:01:49.829 --> 00:01:53.685
那么我们就知道推荐引擎的效果如何

00:01:53.685 --> 00:01:55.890
这只是接下来将学习的下个技巧

00:01:55.890 --> 00:02:01.314
变得异常热门的原因之一

00:02:01.314 --> 00:02:05.715
它会提供每个用户-项目对的预测评分

00:02:05.715 --> 00:02:08.420
使我们能够在将推荐引擎

00:02:08.419 --> 00:02:12.019
部署到实际生产环境当中之前

00:02:12.020 --> 00:02:15.170
使用均方误差或平均绝对误差

00:02:15.169 --> 00:02:20.879
衡量推荐系统在所有用户-项目组合上的效果

