WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.450
在此 notebook 中 我们将学习

00:00:03.450 --> 00:00:08.445
如何利用 Python 的内置函数执行奇异值分解

00:00:08.445 --> 00:00:11.190
首先读取数据集

00:00:11.189 --> 00:00:13.919
注意 我们读取的是在上节课使用的

00:00:13.919 --> 00:00:16.649
movies 和 reviews 数据集

00:00:16.649 --> 00:00:23.368
但是我们会拆分出仅包含几部不同电影的子集

00:00:23.368 --> 00:00:27.074
并将它们存储在这个 user_movie_subset 中

00:00:27.074 --> 00:00:30.599
我们将在此 notebook 中一直使用 user_movie_subset

00:00:30.600 --> 00:00:33.660
首先 我们将回答几个

00:00:33.659 --> 00:00:35.609
关于 user_movie_subset 的问题

00:00:35.609 --> 00:00:38.914
检查一下你是否了解我们将一直使用的数据集

00:00:38.914 --> 00:00:41.210
第一个问题是

00:00:41.210 --> 00:00:43.954
user_movie_subset 中有多少个用户？

00:00:43.954 --> 00:00:47.519
应该调用 user_movie_subset.shape[0]

00:00:49.280 --> 00:00:52.560
结果是 20 个

00:00:52.560 --> 00:00:54.750
电影数量是 4 部

00:00:54.750 --> 00:00:56.700
我在第一部分看到这个数字了

00:00:56.700 --> 00:00:59.804
可以将这个改成 1 并得出这一结果

00:00:59.804 --> 00:01:03.710
给出的平均评分最高的用户对应的 user_id

00:01:03.710 --> 00:01:09.215
调用 mean(axis=1)

00:01:09.215 --> 00:01:14.545
结果显示用户 265 的平均评分为 10 分

00:01:14.545 --> 00:01:17.730
答案是 e

00:01:17.730 --> 00:01:21.590
获得的平均评分最高的电影对应的 movie_id

00:01:21.590 --> 00:01:23.615
将这里改成 0

00:01:23.614 --> 00:01:25.534
结果显示是电影 68646

00:01:25.534 --> 00:01:33.280
所以答案是 b 平均评分最高的片名...

00:01:34.969 --> 00:01:45.480
movies [‘movie_id’] == b

00:01:45.480 --> 00:01:48.685
然后提取片名

00:01:48.685 --> 00:01:50.430
即 movie 列

00:01:50.430 --> 00:01:57.820
噢片名是《教父》

