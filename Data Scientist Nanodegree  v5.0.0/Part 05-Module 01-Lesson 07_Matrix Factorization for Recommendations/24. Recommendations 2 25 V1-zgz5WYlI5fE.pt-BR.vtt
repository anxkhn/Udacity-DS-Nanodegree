WEBVTT
Kind: captions
Language: pt-BR

00:00:00.314 --> 00:00:01.761
Nesta última parte,

00:00:01.794 --> 00:00:05.562
moveremos todo o código que
usamos em notebooks anteriores

00:00:05.595 --> 00:00:08.915
para uma classe que poderá ser usada
por qualquer pessoa

00:00:08.948 --> 00:00:11.217
para ajustar
suas recomendações

00:00:11.250 --> 00:00:12.718
e fazer previsões

00:00:12.751 --> 00:00:15.791
ou recomendações
para novos usuários.

00:00:15.824 --> 00:00:17.438
Para fazer isso,

00:00:17.471 --> 00:00:20.968
usamos alguns dos arquivos
que vemos aqui à esquerda.

00:00:21.001 --> 00:00:25.711
O arquivo que precisaremos preencher
é este recommender_template.

00:00:25.744 --> 00:00:27.222
Se abrirmos isso,

00:00:27.255 --> 00:00:30.159
notaremos que existe
uma classe configurada aqui.

00:00:30.831 --> 00:00:34.418
Notamos que há um método fit,
um init -

00:00:34.451 --> 00:00:37.648
caso queiramos passar
alguma variável para a classe -,

00:00:37.681 --> 00:00:39.807
um método predict_rating

00:00:39.840 --> 00:00:42.878
e um método make_recs.

00:00:42.911 --> 00:00:46.776
Perceba que também temos
o train_data.csv,

00:00:46.809 --> 00:00:51.046
que tem todos os dados de críticas
e o movies_clean.csv.

00:00:51.079 --> 00:00:54.530
Mostrarei rapidamente
como a recomendação funcionará

00:00:54.563 --> 00:00:55.895
depois de configurada.

00:00:55.928 --> 00:00:57.505
No Python,

00:00:57.538 --> 00:01:02.871
podemos pegar o arquivo recommender
deste arquivo recommender.py.

00:01:02.904 --> 00:01:06.377
Do recommender,
vamos importar isto.

00:01:07.032 --> 00:01:10.382
Depois poderemos instanciá-lo.

00:01:10.415 --> 00:01:13.135
Não havia nada no init,

00:01:13.168 --> 00:01:15.613
mas você pode definir o seu
de outra maneira.

00:01:15.646 --> 00:01:19.194
Eu configurei o init

00:01:19.227 --> 00:01:21.746
para obter
os dados das críticas,

00:01:21.779 --> 00:01:24.154
então ele deverá pegar
os dados de treinamento

00:01:24.187 --> 00:01:26.420
e os dados dos filmes.

00:01:27.611 --> 00:01:30.478
Eu configurei para que
ele adéque o recomendador

00:01:30.511 --> 00:01:32.947
aos dados de treinamento
e de filmes.

00:01:32.980 --> 00:01:36.516
Você notará que isso está usando
algo parecido com o que vimos antes

00:01:36.549 --> 00:01:39.840
na decomposição
de valor singular usando o SVD.

00:01:39.873 --> 00:01:42.963
Perceba que estou usando
a parte fit do funkSVD,

00:01:42.996 --> 00:01:46.067
mas ajuste o seu de acordo
com a recomendação mais popular.

00:01:46.100 --> 00:01:49.179
Você poderá usar alguma
recomendação baseada em conteúdo

00:01:49.212 --> 00:01:52.773
ou a configuração
que fizemos no notebook anterior.

00:01:52.806 --> 00:01:55.146
Não há uma resposta certa
para esta parte.

00:01:55.179 --> 00:01:56.827
Enquanto isso
está funcionando,

00:01:56.860 --> 00:02:00.860
mostrarei como configurei
meu arquivo recommender.

00:02:00.893 --> 00:02:03.866
Eu também criei este arquivo
recommender_functions,

00:02:03.899 --> 00:02:06.700
no qual tenho um monte
de funções que escrevemos,

00:02:06.733 --> 00:02:09.668
e coloquei as que precisava
neste arquivo.

00:02:09.701 --> 00:02:11.864
No arquivo
recommender_functions,

00:02:11.897 --> 00:02:15.517
coloquei a função
get_movie_names

00:02:15.550 --> 00:02:19.651
e criei a função para criar
um dataframe classificado.

00:02:19.684 --> 00:02:23.948
Basicamente, copiei e colei
várias das funções

00:02:23.981 --> 00:02:26.229
que escrevemos neste arquivo,

00:02:26.262 --> 00:02:29.589
para que eu possa usá-las
na minha classe recommender.

00:02:30.838 --> 00:02:32.533
Se olharmos
para o arquivo class,

00:02:32.566 --> 00:02:35.500
veremos que não há nada
na configuração

00:02:35.533 --> 00:02:38.164
e que escrevi uma docstring

00:02:38.197 --> 00:02:39.653
que deixasse claro

00:02:39.686 --> 00:02:43.785
quais deviam ser os inputs
e os outputs de cada uma delas.

00:02:44.390 --> 00:02:49.460
Perceba que esta recomendação
terá 12 recursos latentes.

00:02:49.493 --> 00:02:51.256
Ela terá essa taxa
de aprendizado

00:02:51.289 --> 00:02:53.620
e deverá ser executada
por 100 iterações.

00:02:53.653 --> 00:02:55.885
Estamos quase na metade
do caminho

00:02:55.918 --> 00:02:58.144
e, depois
de ajustarmos o modelo,

00:02:58.177 --> 00:03:02.668
configuraremos para prever
e fazer recomendações facilmente

00:03:02.701 --> 00:03:05.468
usando o recommender
que instanciamos.

00:03:05.501 --> 00:03:10.773
Quero mostrar cada um dos métodos
que estão na minha classe.

00:03:10.806 --> 00:03:15.533
É útil escrever boas docstrings
para cada um desses métodos,

00:03:15.566 --> 00:03:18.645
assim, se alguém for usar
a sua classe,

00:03:18.678 --> 00:03:21.532
poderá facilmente escrever
um ponto de interrogação

00:03:21.565 --> 00:03:23.454
depois de qualquer
um dos métodos

00:03:23.487 --> 00:03:27.398
para ver qual deve ser o input
e o que esperar

00:03:27.431 --> 00:03:30.477
de cada parte
da classe de recomendação.

00:03:30.510 --> 00:03:33.957
Na verdade, todo o código
que vemos na classe,

00:03:33.990 --> 00:03:37.197
além das funções recommender,

00:03:37.230 --> 00:03:40.597
é basicamente o código que usamos
em todos os notebooks.

00:03:40.630 --> 00:03:42.988
Eu simplesmente os coloquei
em uma classe

00:03:43.021 --> 00:03:45.700
para que fossem
facilmente reutilizados.

00:03:45.733 --> 00:03:50.639
Ótimo. Vemos que o modelo
não acabou de se ajustar aos dados

00:03:50.672 --> 00:03:52.540
de forma a convergir.

00:03:52.573 --> 00:03:54.788
Pode ser útil executar
por mais tempo,

00:03:54.821 --> 00:03:57.277
mas, para o propósito
desta demonstração,

00:03:57.310 --> 00:04:00.748
isso ilustra
como o método fit funciona.

00:04:00.781 --> 00:04:01.909
Com base nisso,

00:04:01.942 --> 00:04:05.141
se não tiver certeza de como
o método fit foi executado,

00:04:05.174 --> 00:04:08.438
temos essas docstrings
que escrevi na classe.

00:04:08.471 --> 00:04:12.183
É muito fácil ver
quais devem ser os inputs.

00:04:12.216 --> 00:04:16.030
Vemos que não há outputs
vindos disso.

00:04:16.063 --> 00:04:18.071
Ele imprimiu
o que estava acontecendo,

00:04:18.104 --> 00:04:19.868
mas não havia nada retornado.

00:04:19.901 --> 00:04:22.439
Ele criou todas
essas outras coisas,

00:04:22.472 --> 00:04:27.173
e agora cada um deles deve existir
no meu objeto instanciado.

00:04:27.206 --> 00:04:31.629
Se observarmos aqui
no n_users,

00:04:31.662 --> 00:04:34.350
vemos quantos usuários
estavam no conjunto de dados.

00:04:34.383 --> 00:04:36.591
Ou, se observarmos
a quantidade de filmes,

00:04:36.624 --> 00:04:39.166
veremos quantos usuários
estão no conjunto de dados.

00:04:39.199 --> 00:04:41.468
Ou poderíamos observar
a quantidade de filmes

00:04:41.501 --> 00:04:44.069
para ver quantos deles
estavam no conjunto de dados.

00:04:44.102 --> 00:04:48.383
Mais uma vez, a classe facilita
muito obter certas partes.

00:04:48.416 --> 00:04:51.079
Aqui estão todas as coisas
que existem,

00:04:52.295 --> 00:04:55.174
e podemos fazer
uma recomendação.

00:04:55.207 --> 00:04:58.325
Acabei de me lembrar de que
o usuário 8 estava no topo.

00:04:58.358 --> 00:05:00.679
Ah, desculpe.
Isso não funcionou.

00:05:01.423 --> 00:05:02.798
Se olharmos mais de perto,

00:05:02.831 --> 00:05:05.646
veremos que o padrão
é um tipo de filme.

00:05:05.679 --> 00:05:07.910
Vamos voltar aqui em cima.

00:05:07.943 --> 00:05:09.669
Podemos inserir o ID,

00:05:09.702 --> 00:05:13.361
e isso deve ser
o tipo de ID users.

00:05:13.394 --> 00:05:16.542
Mudarei isto para users.
Ótimo.

00:05:16.575 --> 00:05:18.711
Podemos ver que estes são
os cinco filmes

00:05:18.744 --> 00:05:20.757
que recomendamos
para o usuário.

00:05:20.790 --> 00:05:23.038
Vemos que esse é o padrão.

00:05:23.071 --> 00:05:26.954
Novamente, é realmente útil
escrever uma boa docstring

00:05:26.987 --> 00:05:31.185
para vermos exatamente
o que fornecer aos métodos.

00:05:31.218 --> 00:05:33.146
Você pode ver isso
com a minha.

00:05:33.179 --> 00:05:36.179
Eu não uso isto há um bom tempo
e não saberia,

00:05:36.212 --> 00:05:38.748
sem a docstring,
por que não estava funcionando.

00:05:38.781 --> 00:05:42.354
Eu provavelmente não
conseguiria descobrir isso sem ela.

00:05:42.387 --> 00:05:46.122
Espero que isso ajude você
a construir a sua classe.

00:05:46.155 --> 00:05:51.026
Há muita flexibilidade na criação
de qualquer funcionalidade na classe

00:05:51.059 --> 00:05:56.147
para tornar isso tão extravagante
ou tão simples quanto você desejar.

