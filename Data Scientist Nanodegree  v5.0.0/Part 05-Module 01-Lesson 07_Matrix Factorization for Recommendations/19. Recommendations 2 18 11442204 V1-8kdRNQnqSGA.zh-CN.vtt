WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:05.669
下面 我们完成函数

00:00:05.669 --> 00:00:08.205
print_prediction_summary

00:00:08.205 --> 00:00:11.669
我们将从 movies DataFrame 中

00:00:11.669 --> 00:00:15.480
获取 movie_name

00:00:15.480 --> 00:00:21.250
一开始我们使用的就是此 DataFrame

00:00:21.800 --> 00:00:27.625
如果 movie 等于你提供给我的 movie_id

00:00:27.824 --> 00:00:33.060
我将获取片名

00:00:33.060 --> 00:00:37.740
抱歉 这个应该是列名 movie_id

00:00:37.740 --> 00:00:41.410
如果不记得的话 再回忆下数据

00:00:42.469 --> 00:00:44.820
表格是这样的

00:00:44.820 --> 00:00:46.209
也就是说

00:00:46.409 --> 00:00:49.444
提取 movie_id 并返回片名

00:00:49.445 --> 00:00:52.539
转到该 DataFrame 中

00:00:52.539 --> 00:00:55.064
当此 movie_id 等于该 movie_id 时

00:00:55.064 --> 00:00:58.219
则从该 DataFrame 中获取电影片名

00:00:58.219 --> 00:01:01.820
再看看 movie_name

00:01:01.820 --> 00:01:05.120
我们只是执行了字符串操作

00:01:05.120 --> 00:01:06.920
使结果更容易读懂

00:01:06.920 --> 00:01:09.260
这一部分不是必需的

00:01:09.260 --> 00:01:11.884
但使输出更容易读懂

00:01:12.084 --> 00:01:16.549
这里是将这部分替换成空字符串

00:01:16.549 --> 00:01:19.789
这就是这部分的作用这两行代码

00:01:19.790 --> 00:01:21.609
都只是清理 movie_name

00:01:21.609 --> 00:01:24.049
我们也可以直接提取要使用的 movie_name

00:01:24.049 --> 00:01:29.625
for user...在此部分传入 ID

00:01:29.625 --> 00:01:37.230
we predict a...括号里是预测的评分...for the movie ()

00:01:37.230 --> 00:01:44.234
然后传入 user_id

00:01:44.234 --> 00:01:49.659
movie_id 和 movie_name

00:01:49.700 --> 00:01:56.730
这个输出语句清晰地指出 对于用户 8 我们预测出...

00:01:56.730 --> 00:02:01.664
这里应该是 prediction

00:02:01.864 --> 00:02:07.310
对于用户 8 我们预测出此电影的评分为 6.65 分

00:02:07.310 --> 00:02:10.645
这个语句可以清晰地告诉我们发生的情况

00:02:10.645 --> 00:02:14.250
如果能知道预测值的实际效果

00:02:14.250 --> 00:02:17.389
那么对我们来说很有用

00:02:17.389 --> 00:02:19.939
接下来我们将检验预测效果

00:02:19.939 --> 00:02:22.939
我们将从验证数据集中

00:02:22.939 --> 00:02:26.930
提取特定的信息

00:02:26.930 --> 00:02:28.909
我们将对某些行

00:02:28.909 --> 00:02:32.900
做出预测

00:02:32.900 --> 00:02:35.719
我们将使用 predict_rating 函数

00:02:35.719 --> 00:02:39.539
做出预测

00:02:48.409 --> 00:02:54.174
我们将循环访问这里的每个数组

00:02:54.174 --> 00:02:56.370
并且循环这么多次

00:02:56.370 --> 00:03:00.080
我们将提供每项的

00:03:00.080 --> 00:03:04.085
预测值与实际值

00:03:04.085 --> 00:03:12.719
对于第一部分...出错了

00:03:12.719 --> 00:03:16.280
对于第一部分 我们将对这六项做出预测

00:03:16.280 --> 00:03:20.150
关于此用户和此电影

00:03:20.150 --> 00:03:23.409
实际值是 8 预测值约为 6

00:03:23.409 --> 00:03:26.555
实际值为 9 预测值为 7.3

00:03:26.555 --> 00:03:31.310
这个结果已经很不错了 因为原始矩阵非常稀疏

00:03:31.509 --> 00:03:35.719
这些电影都是用户没有评分的电影

00:03:35.719 --> 00:03:38.134
所以能够预测评分已经很棒了

00:03:38.134 --> 00:03:42.245
如果检验前 7 行 依然出错了

00:03:42.245 --> 00:03:46.009
如果检验前 6 行

00:03:46.009 --> 00:03:47.495
我们能够对所有用户-电影对做出预测

00:03:47.495 --> 00:03:51.250
但是到了第 7 个用户-电影对

00:03:51.250 --> 00:03:54.645
我们出错了系统提示这个出界了

00:03:54.645 --> 00:03:57.080
最后一部分需要你

00:03:57.080 --> 00:03:59.615
编写一个关于实际发生情况的语句我提示下

00:03:59.615 --> 00:04:02.840
与冷启动问题有关

00:04:02.840 --> 00:04:06.289
我们向测试集里添加了

00:04:06.289 --> 00:04:11.289
不在训练集里的新用户和电影

