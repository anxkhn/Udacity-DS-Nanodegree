WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.819
我们发现你可以通过指定滤波数量和每个滤波的大小

00:00:02.819 --> 00:00:07.875
控制一个卷积层的行为

00:00:07.875 --> 00:00:12.164
例如为了增加卷积层中节点的数量

00:00:12.164 --> 00:00:14.354
你可以增加滤波的数量

00:00:14.355 --> 00:00:17.070
为了增加检测模式的大小

00:00:17.070 --> 00:00:19.365
你可以增加每个滤波的大小

00:00:19.364 --> 00:00:22.649
不过 还有许多你可以调优的超参数

00:00:22.649 --> 00:00:27.509
其中一个是卷积的步长

00:00:27.510 --> 00:00:32.048
步长是指滤波在图像的滑动量

00:00:32.048 --> 00:00:35.550
在前一个视频的例子中 步长为 1

00:00:35.549 --> 00:00:40.329
然后我们从水平和垂直方向把卷积窗滑过图形

00:00:40.329 --> 00:00:41.809
每次 1 像素

00:00:41.810 --> 00:00:44.804
步长为 1 使卷积层的

00:00:44.804 --> 00:00:48.329
宽和高与输入图像大致相同

00:00:48.329 --> 00:00:54.474
在这个动画中 我们把卷积层涂成紫色 作为叠加的特征图

00:00:54.475 --> 00:00:57.524
如果我们让步长等于 2

00:00:57.524 --> 00:01:02.079
卷积层的宽和高约是图形的一半

00:01:02.079 --> 00:01:06.480
我之所以说约是一半 因为这取决于你对图像边缘的处理

00:01:06.480 --> 00:01:09.180
为了明白边缘处理的作用

00:01:09.180 --> 00:01:13.330
考虑我们玩具例子中 5*5 的灰度图像

00:01:13.329 --> 00:01:17.355
例如我们这里是不同的滤波 高和宽为 2

00:01:17.355 --> 00:01:19.785
步长也为 2

00:01:19.784 --> 00:01:24.000
那么与之前一样 我们首先从图像左上角的滤波开始

00:01:24.000 --> 00:01:29.653
计算第一个节点和卷积层的值

00:01:29.653 --> 00:01:34.005
然后我们向右移动滤波两个单位 进行相同操作

00:01:34.004 --> 00:01:37.819
不过当我们向右移动滤波两个单位时

00:01:37.819 --> 00:01:42.074
滤波超出了图像 现在我们要怎么办呢？

00:01:42.075 --> 00:01:45.715
我们是否仍然要保持相应的卷积节点呢？

00:01:45.715 --> 00:01:49.730
目前为止 我们只是在滤波超出的地方填入问号

00:01:49.730 --> 00:01:54.170
然后继续按计划进行

00:01:54.170 --> 00:01:59.465
那么我们怎样处理滤波超出图像部分的这些节点呢？

00:01:59.465 --> 00:02:01.835
第一种做法是 我们可以

00:02:01.834 --> 00:02:03.449
删除它们

00:02:03.450 --> 00:02:05.495
注意 如果我们这样做

00:02:05.495 --> 00:02:07.954
我们卷积层可能没有

00:02:07.954 --> 00:02:11.925
图像部分区域的信息

00:02:11.925 --> 00:02:16.955
这个例子中是图像的右侧和底部边缘

00:02:16.955 --> 00:02:18.785
第二种做法是

00:02:18.784 --> 00:02:22.009
在这个例子中 我们可以提前对这个图形零填充

00:02:22.009 --> 00:02:26.514
让滤波有更多空间可以移动

00:02:26.514 --> 00:02:29.494
现在我们添加卷积层时

00:02:29.495 --> 00:02:33.073
得到图像每个区域的贡献

00:02:33.073 --> 00:02:35.870
我们可以通过为卷积层设置填充

00:02:35.870 --> 00:02:40.995
指定我们想要的选项

00:02:40.995 --> 00:02:44.770
如果你倾向于第一种情况

00:02:44.770 --> 00:02:47.844
认为失去卷积层的一些节点没有问题

00:02:47.844 --> 00:02:49.884
可以设置填充为有效 (valid)

00:02:49.884 --> 00:02:51.250
另一方面

00:02:51.250 --> 00:02:53.004
如果你倾向于第二种情况

00:02:53.004 --> 00:02:54.919
可以设置填充为相同 (same)

00:02:54.919 --> 00:02:56.619
在下节课中

00:02:56.620 --> 00:02:59.020
我们会向你展示 调优卷积网络时

00:02:59.020 --> 00:03:01.689
怎样把这些参数值传递到 Keras 中

